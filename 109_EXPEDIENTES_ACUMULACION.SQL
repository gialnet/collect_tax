-- -----------------------------------------------------
-- Euro. Revisado el 3-12-2001. Lucas Fernández Pérez 
-- Se han realizado cambios.ROUND en Insert/updates
-- -----------------------------------------------------

/****************************************************************************/

/* SE LANZA CUANDO SE SEGREGA UN VALOR DE UN EXPEDIENTE */


/* CREAR EXPEDIENTE DE ACUMULACION */

CREATE OR REPLACE PROCEDURE CrearAcumulaAminora(
	xTIPO IN CHAR,
	xCodOperacion IN INT,
	xIDEXPE IN INT)
AS

xN_RECIBOS    INT;
xPRINCIPAL    FLOAT;
xRECARGO      FLOAT;
xCOSTAS       FLOAT;
xDEMORA       FLOAT;
xID_ACUMULAR INT;

BEGIN


SELECT COUNT(*), SUM(PRINCIPAL), SUM(RECARGO), SUM(COSTAS), SUM(DEMORA)
	INTO xN_RECIBOS, xPRINCIPAL, xRECARGO, xCOSTAS, xDEMORA
       FROM INGRESOS
       WHERE CODIGO_OPERACION=xCodOperacion;

INSERT INTO ACUMULAR
   (IDEXPE, TIPO, N_RECIBOS, PRINCIPAL, RECARGO, COSTAS, INTERESES)
VALUES
   (xIDEXPE, xTIPO, xN_RECIBOS, xPRINCIPAL, xRECARGO, xCOSTAS, xDEMORA);

SELECT LAST_NUMERO INTO xID_ACUMULAR 
	FROM USUARIOS WHERE USUARIO=USER;

/* INSERTAR EL DETALLE DE LA ACUMULACIO/AMINORACION */

INSERT INTO ACUMULAR_DETALLE(ID_ACUMULA,IDEXPE,IDVALOR,
	PRINCIPAL,RECARGO,COSTAS,INTERESES)
       SELECT xID_ACUMULAR, xIDEXPE, VALOR, PRINCIPAL, RECARGO, COSTAS, DEMORA
       FROM INGRESOS
       WHERE CODIGO_OPERACION=xCodOperacion;

/* ACTIVAR EL AVISO SOBRE LA TABLA DE EXPEDIENTES */
IF xTIPO='A' THEN
   UPDATE EXPEDIENTES SET EXP_ACUM_NOTIF='N'
          WHERE ID=xIDEXPE 
		AND EXP_ACUM_NOTIF='S';
ELSE
   UPDATE EXPEDIENTES SET EXP_ELIM_NOTIF='N'
           WHERE ID=xIDEXPE 
		AND EXP_ELIM_NOTIF='S';
END IF;

END;
/

/* ************************************* */
/* MODIFICAR UN EXPEDIENTE DE ACUMULACION  */


CREATE OR REPLACE PROCEDURE ModificarAcumulaAminora(
	xTIPO IN CHAR,
	xCodOperacion IN INT,
	xIDEXPE IN INT,
	xID_ACUMULAR IN INT)
AS

xN_RECIBOS    INTEGER;
xPRINCIPAL    FLOAT;
xRECARGO      FLOAT;
xCOSTAS       FLOAT;
xDEMORA       FLOAT;

BEGIN


SELECT COUNT(*), SUM(PRINCIPAL), SUM(RECARGO), SUM(COSTAS), SUM(DEMORA)
	INTO xN_RECIBOS,xPRINCIPAL, xRECARGO, xCOSTAS, xDEMORA
       FROM INGRESOS
       WHERE CODIGO_OPERACION=xCodOperacion;

UPDATE ACUMULAR SET
         N_RECIBOS=N_RECIBOS+xN_RECIBOS,
         PRINCIPAL=PRINCIPAL+xPRINCIPAL,
         RECARGO=RECARGO+xRECARGO,
         COSTAS=COSTAS+xCOSTAS,
         INTERESES=INTERESES+xDEMORA,
         NOTIFICADO='N'
     WHERE ID=xID_ACUMULAR;


/* INSERTAR EL DETALLE DE LA ACUMULACIO/AMINORACION */

INSERT INTO ACUMULAR_DETALLE(ID_ACUMULA,IDEXPE,IDVALOR,
	PRINCIPAL,RECARGO,COSTAS,INTERESES)
       SELECT xID_ACUMULAR, xIDEXPE, VALOR, PRINCIPAL, RECARGO, COSTAS, DEMORA
       FROM INGRESOS
       WHERE CODIGO_OPERACION=xCodOperacion;

/* ACTIVAR EL AVISO SOBRE LA TABLA DE EXPEDIENTES */
IF xTIPO='A' THEN
   UPDATE EXPEDIENTES SET EXP_ACUM_NOTIF='N'
          WHERE ID=xIDEXPE 
		AND EXP_ACUM_NOTIF='S';
ELSE
   UPDATE EXPEDIENTES SET EXP_ELIM_NOTIF='N'
           WHERE ID=xIDEXPE 
		AND EXP_ELIM_NOTIF='S';
END IF;

 

END;
/


CREATE OR REPLACE PROCEDURE CrearReciboAcumulaAminora(
	xTIPO IN CHAR,
	xValor IN INT,
	xIDEXPE IN INT)
AS

xN_RECIBOS    INT;
xPRINCIPAL    FLOAT;
xRECARGO      FLOAT;
xCOSTAS       FLOAT;
xDEMORA       FLOAT;
xTotalPendiente FLOAT;
xID_ACUMULAR INT;

BEGIN


PkIngresos.GET_PENDIENTE (xValor, xPrincipal, xRecargo,
                    xCostas, xDemora, xTotalPendiente);

INSERT INTO ACUMULAR
   (IDEXPE, TIPO, N_RECIBOS, PRINCIPAL, RECARGO, COSTAS, INTERESES)
VALUES
   (xIDEXPE,xTIPO,1,ROUND(xPRINCIPAL,2),ROUND(xRECARGO,2), ROUND(xCOSTAS,2), ROUND(xDEMORA,2));

SELECT LAST_NUMERO INTO xID_ACUMULAR 
	FROM USUARIOS WHERE USUARIO=USER;

/* INSERTAR EL DETALLE DE LA ACUMULACIO/AMINORACION */

INSERT INTO ACUMULAR_DETALLE(ID_ACUMULA,IDEXPE,IDVALOR,
	PRINCIPAL,RECARGO,COSTAS,INTERESES)
VALUES 
	(xID_ACUMULAR, xIDEXPE, xVALOR, 
	ROUND(xPRINCIPAL,2), ROUND(xRECARGO,2), ROUND(xCOSTAS,2), ROUND(xDEMORA,2));

/* ACTIVAR EL AVISO SOBRE LA TABLA DE EXPEDIENTES */
IF xTIPO='A' THEN
   UPDATE EXPEDIENTES SET EXP_ACUM_NOTIF='N'
          WHERE ID=xIDEXPE 
		AND EXP_ACUM_NOTIF='S';
ELSE
   UPDATE EXPEDIENTES SET EXP_ELIM_NOTIF='N'
           WHERE ID=xIDEXPE 
		AND EXP_ELIM_NOTIF='S';
END IF;

END;
/


CREATE OR REPLACE PROCEDURE ModificarReciboAcumulaAminora(
	xTIPO IN CHAR,
	xValor IN INT,
	xIDEXPE IN INT,
	xID_Acumula INT)
AS

xN_RECIBOS    INT;
xPRINCIPAL    FLOAT;
xRECARGO      FLOAT;
xCOSTAS       FLOAT;
xDEMORA       FLOAT;
xTotalPendiente FLOAT;
xID_ACUMULAR INT;

BEGIN


PkIngresos.GET_PENDIENTE (xValor, xPrincipal, xRecargo,
                    xCostas, xDemora, xTotalPendiente);

UPDATE ACUMULAR
         SET N_RECIBOS=N_RECIBOS+1,
           PRINCIPAL=PRINCIPAL+ROUND(xPRINCIPAL,2),
           RECARGO=RECARGO+ROUND(xRECARGO,2),
           COSTAS=COSTAS+ROUND(xCOSTAS,2),
           INTERESES=INTERESES+ROUND(xDEMORA,2),
           NOTIFICADO='N'
         WHERE ID=xID_Acumula;


/* INSERTAR EL DETALLE DE LA ACUMULACIO/AMINORACION */

INSERT INTO ACUMULAR_DETALLE(ID_ACUMULA,IDEXPE,IDVALOR,
	PRINCIPAL,RECARGO,COSTAS,INTERESES)
VALUES 
	(xID_Acumula, xIDEXPE, xVALOR, 
	ROUND(xPRINCIPAL,2), ROUND(xRECARGO,2), ROUND(xCOSTAS,2), ROUND(xDEMORA,2));

/* ACTIVAR EL AVISO SOBRE LA TABLA DE EXPEDIENTES */
IF xTIPO='A' THEN
   UPDATE EXPEDIENTES SET EXP_ACUM_NOTIF='N'
          WHERE ID=xIDEXPE 
		AND EXP_ACUM_NOTIF='S';
ELSE
   UPDATE EXPEDIENTES SET EXP_ELIM_NOTIF='N'
           WHERE ID=xIDEXPE 
		AND EXP_ELIM_NOTIF='S';
END IF;

END;
/

